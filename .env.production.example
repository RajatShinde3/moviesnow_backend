# MoviesNow Backend â€” Production Environment Template
#
# Copy this to your secret manager or deployment environment variables.
# Do NOT commit real values to your repository.

# ==== Runtime mode ====
ENV=production
# Some utilities read ENVIRONMENT instead of ENV; keep them consistent
ENVIRONMENT=production
ENABLE_HTTPS_REDIRECT=true

# Strong security headers for prod
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=true
REFERRER_POLICY=no-referrer
CROSS_ORIGIN_OPENER_POLICY=same-origin
CROSS_ORIGIN_RESOURCE_POLICY=same-origin
CROSS_ORIGIN_EMBEDDER_POLICY=require-corp

# Tight CSP (no inline/eval); add your CDN domains as needed
CSP_DEFAULT_SRC='self'
CSP_SCRIPT_SRC='self' 'strict-dynamic'
CSP_STYLE_SRC='self'
CSP_IMG_SRC='self' data:
CSP_FONT_SRC='self' data:
CSP_CONNECT_SRC='self'
CSP_FRAME_ANCESTORS='none'

# Restrict to exact frontend origins (set to your domains)
FRONTEND_URL=https://app.example.com
FRONTEND_ORIGINS=https://app.example.com
ALLOW_ORIGINS_REGEX=

# Optional: restrict which hosts are accepted by the app (if used)
# TRUSTED_HOSTS=api.example.com,api.internal.example.com

# Optional: limit admin routes to specific IPs (comma-separated)
# Example for office IPs: 203.0.113.10,203.0.113.11
ADMIN_IP_ALLOWLIST=

# ==== Postgres (required) ====
POSTGRES_SERVER=postgres
POSTGRES_PORT=5432
POSTGRES_USER=moviesnow
POSTGRES_PASSWORD=please_provide_via_secret
POSTGRES_DB=moviesnow

# ==== Redis (required) ====
REDIS_URL=redis://redis:6379/0

# ==== JWT / Secrets (required) ====
JWT_SECRET_KEY=please_provide_via_secret
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7

# ==== Rate Limiting (recommended) ====
RATE_LIMIT_ENABLED=true
DEFAULT_RATE_LIMIT=200/minute,5000/hour
RATELIMIT_STORAGE_URI=${REDIS_URL}
RATE_LIMIT_TRUSTED_IPS=
RATE_LIMIT_SKIP_PATHS=/health,/metrics,/openapi.json
# Optional: strategy (moving-window|fixed-window)
# RATELIMIT_STRATEGY=moving-window
# Optional: namespace for metrics/keys (empty in prod)
# RATE_LIMIT_NAMESPACE=
# Optional: header to bypass a single request (keep as-is unless needed)
# RATE_LIMIT_BYPASS_HEADER=X-RateLimit-Bypass

# ==== Storage / CDN (optional) ====
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
AWS_BUCKET_NAME=
CLOUDFRONT_DOMAIN=

# Optional: explicit endpoint (useful for VPC endpoints or S3-compatible stores)
# AWS_S3_ENDPOINT_URL=

# Optional: server-side encryption defaults
# AWS_SSE_MODE=AES256
# AWS_KMS_KEY_ID=

# CloudFront signed cookies (optional; required for private CDN cookies endpoint)
# CF_KEY_PAIR_ID=
# CF_PRIVATE_KEY_PEM="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----"

# ==== Email (optional) ====
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
EMAIL_FROM="MoviesNow <noreply@example.com>"
EMAIL_STRICT_LOCAL=0
EMAIL_VERIFY_BASE_URL=https://app.example.com
# Additional email metadata and DKIM (optional)
# EMAIL_FROM_NAME=MoviesNow
# MAIL_DKIM_DOMAIN=example.com
# MAIL_DKIM_SELECTOR=default
# MAIL_DKIM_KEY="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----"

# ==== Observability (optional) ====
SENTRY_DSN=

# Logging (stdout by default in containers)
LOG_LEVEL=INFO
LOG_JSON=1
APP_DEBUG=0
# Prefer stdout in prod; disable file sink
LOG_TO_FILE=0
# LOG_DIR=logs
# LOG_FILE=app.log
# LOG_ROTATION=10 MB

# Uvicorn integration and early boot debug (rarely needed)
# OBS_SUPPRESS_UVICORN_INTEGRATION=0
# OBS_DEBUG_BOOT_LOG=0

# ==== Cache (optional; uses Redis if set) ====
# CACHE_REDIS_URL=${REDIS_URL}
# CACHE_NAMESPACE=moviesnow:cache
# CACHE_DEFAULT_TTL=300
# CACHE_COMPRESS=true
# CACHE_COMPRESS_THRESHOLD=256
# CACHE_MAX_KEY_LEN=512
# CACHE_LOCK_TIMEOUT=30
# CACHE_LOCK_SLEEP=0.05

# ==== Admin API (optional; enables header auth on admin endpoints) ====
# ADMIN_API_KEY=

# ==== OIDC / JWKS (optional) ====
# Enable JWKS verification for inter-service tokens
# JWT_VERIFY_WITH_JWKS=0
# OIDC_ISSUER=https://auth.example.com
# OIDC_KID=
# OIDC_RSA_PRIVATE_KEY_PEM="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----"
# OIDC_RSA_PUBLIC_KEY_PEM="-----BEGIN PUBLIC KEY-----\n...\n-----END PUBLIC KEY-----"

# ==== Maintenance schedulers (optional) ====
# Token cleanup worker
# TOKEN_CLEANUP_SCHEDULER=true
# TOKEN_CLEANUP_INTERVAL_MINUTES=60
# TOKEN_CLEANUP_RETENTION_EXPIRED_DAYS=1
# TOKEN_CLEANUP_RETENTION_REVOKED_DAYS=7
# TOKEN_CLEANUP_LOCK_TTL_SECONDS=300
# TOKEN_CLEANUP_JITTER_SECONDS=15

# JWKS rotation/prune
# JWKS_SCHEDULER=true
# JWKS_ROTATE_INTERVAL_HOURS=168
# JWKS_PRUNE_INTERVAL_HOURS=24
# JWKS_CACHE_TTL=60
